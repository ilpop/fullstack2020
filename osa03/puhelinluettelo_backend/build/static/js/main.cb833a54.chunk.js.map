{"version":3,"sources":["services/persons.js","components/filter.js","components/personContacts.js","components/personForm.js","App.js","index.js"],"names":["baseUrl","axios","get","then","response","data","personObject","post","id","put","delete","Filter","props","value","search","onChange","handleSearch","Person","person","deletePerson","name","number","onClick","PersonContacts","persons","map","key","PersonForm","onSubmit","addPerson","newName","handleChange","newNumber","handleNumberChange","type","App","useState","setPersons","setNewName","setNewNumber","setSearch","successMessage","setSuccessMessage","useEffect","personService","initialPersons","numbersToShow","filter","includes","Notification","message","className","event","console","log","target","preventDefault","every","addedPerson","concat","catch","error","setTimeout","window","confirm","find","p","returnedPerson","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.cb833a54.chunk.js","sourcesContent":["import axios from 'axios'\nconst baseUrl ='/api/persons'\n\nconst getAll = () => {\n    const request = axios.get(baseUrl)\n    return request.then(response => response.data)\n\n}\n\nconst create = personObject => {\n    const request = axios.post(baseUrl, personObject)\n    return request.then(response => response.data)\n}\n\nconst update = (id, personObject) => {\n    const request = axios.put(`${baseUrl}/${id}`, personObject)\n    return request.then(response => response.data)\n}\n\nconst deleteObject = (id) => {\n    const request = axios.delete(`${baseUrl}/${id}`)\n    return request.then(response => response.data )\n}\n\nexport default {getAll, create, update, deleteObject}","import React from 'react'\n\nconst Filter = (props) => {\nreturn (\n<form>\n<div>\n      filter shown with: <input value={props.search}\n       onChange={props.handleSearch}/>\n       </div>\n\n</form>\n\n       )\n}\n\n    export default Filter","import React from 'react'\n\nconst PersonContacts = ( {persons, deletePerson} ) => {\n    return (\n        <table>\n            <tbody>       \n            {persons.map(person => <Person key={person.id} \n            person={person} deletePerson={deletePerson}/>)}\n            </tbody>\n        </table>\n        )\n}\n\nconst Person = ( {person, deletePerson} ) => {\n    return (\n        <tr>\n            <td>{person.name}</td>\n            <td>{person.number}</td> \n            <td><button onClick={() => {deletePerson(person.id)}}>\n                delete</button> </td>\n        </tr>\n\n          )\n        }\n\n\n\nexport default PersonContacts","import React from 'react'\n\nconst PersonForm =(props)=> {\n    return (\n      \n  <form onSubmit={props.addPerson}>\n    <div>\n      name: <input value={props.newName}\n        onChange={props.handleChange}/>\n      </div>\n    <div>\n      number: <input value={props.newNumber}\n        onChange={props.handleNumberChange}/>\n      </div>\n    <div>\n        <button type=\"submit\">add</button>\n     </div>\n  </form>\n  \n  \n    )\n  }\n\n  export default PersonForm","import React, { useState, useEffect } from 'react';\nimport personService from './services/persons';\nimport Filter from './components/filter';\nimport PersonContacts from './components/personContacts';\nimport PersonForm from './components/personForm';\nimport './index.css'\n\nconst App = () => {\n  const [ persons, setPersons] = useState([]) \n  const [ newName, setNewName ] = useState('add new name')\n  const [ newNumber, setNewNumber ] = useState('add new number')\n  const [ search, setSearch ] = useState('')\n  const [ successMessage, setSuccessMessage ] = useState(null)\n\n  useEffect(() => {\n    personService\n    .getAll()\n      .then(initialPersons => {\n      setPersons(initialPersons)\n    })\n      \n    }, [])\n\n    const addPerson = (event) => {\n      event.preventDefault()\n      const personObject = {\n        name : newName,\n        number: newNumber\n     \n      }\n  \n      if (persons.every(person => person.name !== newName)) {\n      personService\n      .create(personObject)\n      .then(addedPerson => {\n        setPersons(persons.concat(addedPerson))\n\n      })\n\n      .catch(error => {\n        console.log(error.response.data);\n        setSuccessMessage(\n          `Error: ${error.response.data}`\n        )\n        setTimeout(() => {\n          setSuccessMessage(null)\n        }, 5000)\n        \n      })\n\n     \n\n        setSuccessMessage(\n          `Added ${personObject.name}`\n        )\n        setTimeout(() => {\n          setSuccessMessage(null)\n        }, 5000)\n\n\n\n    } else { \n\n      if(window.confirm(`Are you sure you want to change the number of ${personObject.name}?`))Â {\n        const person = persons.find(p => p.name === personObject.name)\n        personService\n          .update(person.id, personObject) \n          .then(returnedPerson => { \n            setPersons(persons.map(p=>p.id !== person.id ? p : returnedPerson))\n        \n          }) \n\n          .catch(error => {\n            setSuccessMessage(\n              `the information of '${personObject.name}' is already been removed from server`\n            )\n            setTimeout(()=> {\n              setSuccessMessage(null)\n            }, 5000)\n          })\n\n          \n          \n          setSuccessMessage(\n            `Number of ${personObject.name} is changed.`\n          )\n\n          setTimeout(() => {\n            setSuccessMessage(null)\n          }, 5000)\n            \n      }\n    }\n    \n   \n        setNewName('')\n        setNewNumber('')   \n   \n  }\n\nconst deletePerson = (id) => {\n  const deletePerson = persons.find(p => p.id === id)\n  if (window.confirm('Are you sure you want to delete this number?')) {\n  personService\n    .deleteObject(id)\n    .then(() => {\n      setPersons(persons.filter(person => person.id !== id))\n    })\n    setSuccessMessage(\n      `The number of ${deletePerson.name} is deleted.`\n    )\n    setTimeout(() => {\n      setSuccessMessage(null)\n    }, 5000)\n}\n\n}\n\n\n  const numbersToShow = search === '' \n    \n    ? persons\n    : persons.filter(person => \n      person.name.includes(search))\n  \n\n\n  \n  const handleChange = (event) => {\n    console.log(event.target.value)\n\n    \n    console.log('persons are: ' , persons);\n    console.log('what is happening', event.target.value);\n\n    setNewName(event.target.value)\n    \n  }\n\n  const handleNumberChange = (event) => {\n    setNewNumber(event.target.value)\n  }\n  \n  const handleSearch = (event) => {\n    console.log('filter by', event.target.value);  \n    setSearch(event.target.value)\n  }  \n\n  const Notification = ({ message }) => {\n    if (message === null) {\n      return null\n    }\n\n    return (\n      <div className=\"success\">\n        {message}\n      </div>\n    )\n  }\n\n  return (\n    <div>   \n      <h2>Phonebook</h2>\n\n      <Notification message = {successMessage}/>\n\n      <Filter search = {search} handleSearch = {handleSearch}/>\n\n      <h2> Add a new: </h2>\n\n      \n      <PersonForm addPerson ={addPerson} \n                  newName = {newName}\n                  handleChange = {handleChange}\n                  newNumber = {newNumber} \n                  handleNumberChange = {handleNumberChange} />\n\n      <h2>Numbers</h2>\n\n      <PersonContacts persons = {numbersToShow} \n                      deletePerson={deletePerson}/>\n    \n\n      <div>debug: {newName} {newNumber}</div>\n    </div>\n  )\n\n  }\n\nexport default App\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\n\nReactDOM.render(<App />,document.getElementById('root'));\n"],"sourceRoot":""}